**Virtual Cloud Network Networking Constructs**
Virtual, private network set up in Oracle data centres, with firewall rules and specific types of communication gateways
Resides in a single region
Can have up to five nonoverlapping IPv4 CIDR blocks of your choice. Allowable range is from /30 to /16.
CIDR blocks can be modified after VCNs are created.
To create a vinic Navigation: Networking>VCN

**Subnets**
Instances are placed in subnets logically and draw their internal IP address and network configuration from their subnet.
The Virtual Network Interface Card (VNIC) determines how the instance connects with endpoints inside and outside the VCN.
To create a vinic Navigation: Networking>VCN>Subnets

**Oracle VNIC**
Oracle Cloud Infrastructure VNICS
A VNIC enables an instance to connect to a VCN and determines how the instance connects with endpoints inside and outside the VCN. Each VNIC resides in a subnet in a VCN and includes these items:
One primary private IPv4 address from the subnet in which the VNIC is, chosen by either you or Oracle.
Up to 32 optional secondary private IPv4 addresses from the same subnet in which the VNIC is, chosen by either you or Oracle.
To create a vinic Navigation: Compute>Instance>Instance Details> Attached-VINIC

**Security List**
A security list is a common set of firewall rules associated with a subnet and applied to instances launched inside the subnet.
Stateful means only one side traffic is considered example if we put 0.0.0.0/0 in ingress then check the stateless as no, nothing should be added to egress 
Stateless means two sides of traffic is considered example if we put 0.0.0.0/0 in ingress then check the stateless as yes even ingress the rules should be added as same 

**Network Security Group**
Network Security Group" (NSG) allows you to define security rules for a specific group of virtual network interface cards (VNICs), while a "Security List" applies security rules to all VNICs within a particular subnet
NSG can be created and attached to VNIC so that its accessible via vnic
To create a NSG Navigation: Compute>Networking> VCN>Network Security Group
To Attach NSG to a VNIC: Compute>Instance>Instance Details> Attached-VINICs>NSG

**Route Table**
To create a Route Table:
Compute>Networking> VCN> route tables
it’s a connection between gateway and subnet 

**Internet Gateway**
Internet Gateway Is an optional virtual router you can add to your VCN to enable direct connectivity to the Internet
To create an Internet gateway: Compute>Networking>VCN>route tables>Internet gateway 
It can be only created in public subnet

**NAT Gateway**
To create an NAT gateway: Compute>Networking>VCN>route tables>route rule>NAT gateway
Instances in a private subnet don't have public IP addresses.
Add a NAT gateway to your VCN to give instances in a private subnet access to the Internet.
NAT gateways are highly available and support TCP, UDP, and ICMP ping traffic

**Local-Peering-gateway**
Local VCN peering is the process of connecting two VCNs in the same region so that their resources can communicate by using private IP addresses.
A local peering gateway (LPG) is a component on a VCN for routing traffic to a locally peered VCN.
The two VCNS in the peering relationship shouldn't have overlapping
To create a Local-Peering-gateway:Compute>Networking> VCN> Local-Peering-gateway> Create Local peering gateway>Establish Peering Connection
VCN-1ADD Route Rule:Compute>Networking> VCN> route tables> route rule> Target Type LPG > Destination cidrblock(2nd VCN IP)> Target Local Peering Gateway(Select the 2nd VCN LPG Name)
VCN-1ADD Security List to Pvt Subnet:Compute>Networking> VCN> Security List>ADD ICMP Rule of 2nd VCN to ping, In security list PVT of first VCN
VCN-2
VCN-2ADD Route Rule:Compute>Networking> VCN> route tables> route rule> Target Type LPG > Destination CIDRblock(1st VCN IP)> Target Local Peering Gateway(Select the 1st VCN LPG Name)
VCN-2ADD Security List to Pub Subnet:Compute>Networking> VCN> Security List>ADD ICMP Rule of 1st VCN to ping, In security list pub of second VCN
ssh -i mypvtkey UserName@ipadderess 

**Dynamic Routing Gateway (DRG)**
Dynamic Routing Gateway (DRG)
DRG is a virtual router that provides a path for private traffic between your VCN and destinations other than the Internet.
Use it to establish a connection with your on-premises network via FastConnect (private, dedicated connectivity) or Site-to-Site VPN connectivity (IPSec).
DRG is a stand-alone object. You must attach a VCN to a DRG. Multiple VCNS can be attached to the same DRG. After attaching a DRG, you must add a route for the DRG in the VCN's route table to enable traffic flow.
To create a Dynamic Routing Gateway:Networking> Customer-Connectivity>Dynamic-Routing-Gateway 
To create a Dynamic Routing Gateway between Two VCN’s each one from different region VCN-1/VCN-2(Repeat the steps for both VCNS):
1: Networking> Customer-Connectivity>Dynamic Routing Gateway>Create Virtual Cloud Network Attachment> Attachment Name(give an appropriate name)>VCN(Select the Vcn-name)
2:Create Remote Peering gateway for the above:Networking> Customer-Connectivity>Dynamic Routing Gateway>Create Remote Peering Connection>Name(Give the Name)>Compartment
3:Establish the remote Peering connection:Networking> Customer-Connectivity>Dynamic Routing Gateway>Create Remote Peering Connection>Establish-Connection>Region(Choose the Region of the other VCN)>Remote peering connection OCID(Paste the OCID of the Other VCN which should be attached).
4:Create the Route Rule in VCN-1:Compute>Networking> VCN> route tables> route rule> Target Type DRG> Destination cidrblock(2nd VCN IP)> Target Dynamic Routing Gateway (Select the 2nd VCN DRG-Name)
5:Add the IP address of other vcn to security list of first VCN:Networking>VCN>VCN-1>Security-list>(Add the other VCN Ip address)

**Remote Peering Gateway (RPG)**
The two VCNS in the peering relationship must not have overlapping CIDRS. Best Practice.
Typically, RPC is for VCNs located in different regions, but it can also be used for VCNS in the same region too.
The VCNS can be located in different tenancies.
To create a Remote Peering Gateway For both Regions VCN-1/VCN-2:
VCN-1
1:VCN-Attachment:Networking> Customer-Connectivity>Dynamic-Routing-Gateway>DRG>Create VCN Attachment>Attachment-Name(create the name of the attachment VCN-Name )>VCN(Choose VCN)
2:RPG-Peering-Attachment:Networking> Customer-Connectivity>Dynamic-Routing-Gateway)>DRG> RPG-Peering-Attachment>Name(Give Name of RPG>Attachment-Name>choose compartment.
3:Establish the remote Peering connection:Networking> Customer-Connectivity>Dynamic Routing Gateway>Create Remote Peering Connection>Establish-Connection>Region(Choose the Region of the other VCN)>Remote peering connection OCID(Paste the OCID of the Other VCN which should be attached).
4:ADD Security List to Pub Subnet:Compute>Networking> VCN> Security List>ADD ICMP Rule of 1st VCN to ping, In security list pub of second VCN
VCN-2
1:DRG-Attachment: Networking>VCN>Choose VCN>DRG-Attachments>Name(Give the name of DRG Attachment)>DRG(Choose the DRG Connection)
2:RPG-Attachments: Networking> Customer-Connectivity>Dynamic Routing Gateway)>DRG> RPG-Peering-Attachment>Name(Give Name of RPG>Attachment-Name>choose compartment.
3:Establish the remote Peering connection: Networking> Customer-Connectivity>Dynamic Routing Gateway>Create Remote Peering Connection>Establish-Connection>Region(Choose the Region of the other VCN)>Remote peering connection OCID(Paste the OCID of the Other VCN which should be attached).
4:ADD Security List to Pub Subnet: Compute>Networking> VCN> Security List>ADD ICMP Rule of 1st VCN to ping, In security list pub of second VCN

**Service Gateway**
VCNS or on-premises networks access Oracle services public IP addresses without the need to route traffic via an Internet or NAT gateway, ensuring traffic is routed over Oracle's private backbone

**Load-Balancers**
OCI Load Balancing provides automated traffic distribution from one entry point to multiple servers reachable from your virtual cloud network (VCN).
Load Balancer: Concepts
Back-End Server
Certificates
Load Balancing Policy
Shape
Health Check

Load Balancing Policies
Round Robin
Least Connections
IP Hash
Creation of Load-Balancer
To Create a Load-Balancer: Networking>Load Balancer>CreateLoadBalancer>Name(Name of LB)>Public>Ephemeral IP>Flexible Shape>Min10>Max100mbps>VCN(Select a VCN)>Subnet(Select the subnet)>Next>WeightedRoundRobin>AddBackends>select the instances>Next>Http/80>Next>select the log group
To Create a load-Balancer with reserved ip:
To Create a load-Balancer with reserved ip:
1:Create reserved Ip address: Networking>Ip management>ReservedPublicIpAddress>Name(Create a Name)>choose Ip Pool
2:Create Load-Balancer:Networking>Load Balancer>CreateLoadBalancer>Name(Name of LB)>Public>Reserved IP >existing Ip address> choose the ip Address>Flexible Shape>Min10>Max1000mbps>VCN(Select a VCN)>Subnet(Select the subnet)>Next>WeightedRoundRobin>AddBackends>select the instances>Next>Http/80>Next>select the log group
To Create a PVT-Load-Balancer:
To Create a PVTLoad-Balancer: Networking>Load Balancer>CreateLoadBalancer>Name(Name of LB)>Private>Ephemeral IP>Flexible Shape>Min10>Max100mbps>VCN(Select a VCN)>Subnet(Select the subnet)>Next>WeightedRoundRobin>Add Backends>select the instances>Next>Http/80>Next>select the log group
**Network-Load-Balancer**
To Create a Network-load-Balancer with reserved ip:
Networking>Network-Load Balancer>CreateLoadBalancer>Name (Name of LB)>Public> >VCN (Select a VCN)>Subnet (Select the subnet)>Next>Listener(TCP/UDP?ICMP)>Add Backends>select the instances>Next>TCP/22.

**DNS**
Domain Name System (DNS);
The hierarchical and decentralized naming system Used to identify computers, services, and other resources reachable through the Internet or other Internet Protocol (IP) networks
To create DNS Names in public zone:1:Networking>DNS Management>Zones>Method(Manual)>ZoneType(Primary)>Zone-Name(www.example.com)>create in compartment(Name of compartement)
To create Records in DNS:2:Networking>DNS Management>Zones>Select the DNS-Name>Records>manage Records>Name(Give the name Eg:www)>Type (AAA-Ipv4 Address)>Address(Add the Ip Address)

Private DNS
To create DNS Names in Private-Zone: Networking>DNS Management>choose private>Zones>Method (Manual)>ZoneType(Primary)>Zone-Name(www.example.com)>create a new private DNS-View(Name of View)
To create Records in Private-DNS:2:Networking>DNS Management>Zones>Select the DNS-Name>Records>manage Records>Name(Give the name Eg:www)>Type (AAA-Ipv4 Address)>Address(Add the Ip Address)
choose private resolver:Networiking>VCN>Private Resolver Details>Associate Private Views>Manage Private Views>Choose Private View.

Forwarding DNS Resolver
1:Forwarding DNS Resolver from one VCN to Another:  Networking>VCN>Private Resolver Details>Endpoints>Create EndPoint>Name(Forwarding)>Compartment(Select Comaprtment and choose subnet)> Add Ip Address
2:Add Rules: Networking>VCN>Private Resolver Details>Rules>Manage Rules>Rule Condition(Domains)>Domains(WWW.example.com)>Source EndPoint(Forwarding)>Destination Ip Address(Provide the Ip Address)

Geolocation steering:
Create a geolocation traffic management policy that distributes DNS traffic to different endpoints based on the location of the end user
1:Observilabilityandmanagement>Monitering>HealthChecks>create health check>name of health check>compartement>Targets(choose targets)>Vantagepoints(choose vantage points)>Request Type(Http)>Method(GET)>Timeout Interval(30 sec)
2:Networking>DNS Management>Traffic Steering Policies>Create Traffice management policies>geolocation steering>Policy Name(Give the name of policy)>Answerpoolname(Name of Pool)>Type(TypeA,B,C)>Rdata(put the ip address)>geolocation steering rules(Select geolocation)>Pool-Prority(choose the location prority)>Attach Health check>Select Existing>Request type(Http)>Compartment(Choose compartment)>health check(choose the backend)Attach domain(select domain)

Site-to-Site VPN
To Create the site-to-site VPN:	
1:Create a CPE:Networking>Customer connectivity>Customer Premises equipment>Create CPE>Name(Give a name of CPE)>Ip Address(Give the Ip address of CPE of BGP)>Vendor(choose vendor Liebreswan)>Platform/Version (Choose version)>Create CPE
2:Site-To Site-VPN-Tunnel:Create Ipsec Tunnel>Name(Give the name)>Customer-premises equipment(Choose the CPE which was created in step-1)DRG-Gateway(Choose the DRG)>Route to your on prem device(Give the VCN ID)>Name(Give the tunnel name)>choose the BGP as routing type>BGP-ASN(choose 65001pvt ASN)> Ipv4 inside tunnel interface (choose ip-address for ip tunnel)
3:Skip source destination check: go to CPE Instance>Attached VNICS>edit VNIC>choose Skip source destination check
4:Follow the below link to configure the liberswan in CPE Instance 
https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/libreswan.htm
Bulding the AWS-TO-OCI Tunnel : https://www.ateam-oracle.com/post/oci-to-aws-ipsec-tunnel-using-the-built-in-vpn-service

Fast-Connect
To Create the Fast-Connect Via private peering :	
1:Create a CPE:Networking>Customer connectivity>Fast Connect>Create connection>Fast connect>partner(choose Equinix fabric)>Choose DRG>Provisioned Bandwidth(1gbps)>Choose ipv4 and ipv6 address>Customer BGP ASN>MTU(Bytes 9000)>copy the OCID of the Fast connect>
2:Go to fabric Equinix in browser> Go to OCI infrastructure Fast connect and click on create connection>click Port>select location as Ashburn>Click on port which is assigned>select the destination as Ashburn>give valn id as 3031>Paste the virtual circuit ocid (the fast connect ocid which is copied)>Submit Order
3:Login into svc server and ping the VM and check weather the traffic is going via fast connect :command : mtr 10.0.1.5
Fast-Connect Via public peering :
1:Create a CPE:Networking>Customer connectivity>Fast Connect>Create connection>Fast connect>partner(choose Equinix fabric)>Name (Give name for fast connect)>Choose connection as public> Choose DRG>Provisioned Bandwidth(1gbps)>Choose ipv4>Customer BGP ASN(394749)>MTU(Bytes 9000)>copy the OCID of the Fast connect>
2:Go to fabric Equinix in browser> Go to OCI infrastructure Fast connect and click on create connection>click Port>select location as Ashburn>Click on port which is assigned>select the destination as Ashburn>give valn id as 3031>Paste the virtual circuit ocid (the fast connect ocid which is copied)>Submit Order
3:Login into svc server and ping the VM and check whether	 the traffic is going via fast connect :command : mtr object storage 

Connecting oci-to-Azure :
To Create a connection between Azure to oci via azure fast connect:
follow the below link to connect the oci to azure end to end 

https://learn.microsoft.com/en-us/azure/virtual-machines/workloads/oracle/configure azure-oci-networking
1:Attach the oci VCN to DRG which should be created and attach DRG to Route rule by given VCN Range 
2:Create a Subnet Gateway in Azure : Go to the Virtual Network>Subnets>Gateway Subnet(create a gateway subnet with default values)
2:Create a virtual network Gateway in Azure : Home > Create a resource>Market Place> Virtual Network Gateway > Name(give the name)>Select the EXPRESSROUTE> Select Standard >VCN(Select the VCN> Subnet(select the Subnet gateway)>Create a new public ip address Ipv4>click submit.
3:Create ExpressRoute in Azure: Create a resource>Market Place>ExpressRoute>Resource Group(OCIAzureInternetConnect-Compartement)>Instance Details>Name(ExpressroutetoICI-Instance Name)>Next>Provider(Oracle Cloud Fast Connect)>Peering Location(Choose the location)>Bandwidth(Choose the speed as 1gbps)>Create >Copy the Service key
4: Create the Fast connect in OCI: Networking>Customer Connectivity>Fast Connect>Create Fast connect>Connection Type (Fast Connect Partner)>Choose the Partner(Microsoft Azure Partner>Next>name(Give the Name)>check the Private Virtual Circuit  >Check the All Traffic >DRG(Select the DRG)>Bandwidth(1gbps)>Partner Service Key(Paste the service key taken from the Azure )>Give the BGP Address of four >Create 
5:Create the Connection in Azure : Create a resource>Market Place>Connection>Resource Group(OCIAzureInternetConnect-Compartement)>Instance Details>Name(Connection)>Next>VGN(Virtual Network Gateway)>EXPRESSROUTE Circuit(Choose EXPRESSROUTE )>Create
6:Try to ping the instance 

 Connecting oci-to-Google-Cloud:
 To Create a connection between Google Cloud to oci via fast connect:
1:Select the Project in Google cloud (go to google cloud click on the menu beside the google cloud 
2:Create a VPC (Search for Networking and select VPC)>Create VPC Network> Name(Give the name of VPC)>Check for the below and select the region accordingly which is compatible  in gcp >Check on ipv4 and ipv6 stack and give the ip address>Ipv access type(Internal)>Ipv4 rules check on the ICMP rules>Create
3:Adding ICMP for IPV6: go to the VPC which is created initially>Go to Subnets>Firewall>Add the Firewall rule>Name(Give the name)>Targets(All instances in the network)>Source Filter(IPV6 Range)>Source Ipv6 Ranges is ::/0>Specified Protocols and ports (Other 58)>Create
4:Create a Compute Instance:(Search for Networking and select Compute Engine)>Create Instance Name(Give the name of Instance)>Choose the region>Choose the machine configuration>Networking>Network interface Card(VirtIO)>Network Interface(Select the VPC&Subnet Which was created)>checkIPV6 Dual stack>Create.
5:Create a Interconnect:(Search for Networking and select Interconnect )>Create Vlan Attachment>Click on Partner Interconnect>Continue>Click on We already have service Provider>Select the VPC and region which was created>VLAN A >Create router>Name(Give the name)>Create>Attachment Name(Give the Specific Name)>IPV6 Dual Stack>MTU(1500)>VLAN B (Same as VLAN A)>Click on Enable for Pre activate VLAN Attachments >Copy the Service Key from main connection 
Create the Fast connect on OCI-Side: Go to DRG>Virtual Circuit >create Fast-Connect >partner Virtual Circuit >All Traffic >Select the value(Select the DRG) >Provisioned Bandwidth(1GBPS)>Paste the Partner key >MTU 1500>Create

Transitive Routing On-Prem to OCI to Remote Region via RPC
Networking>Customer Connectivity>Dynamic Routing gateways>Dynamic Routing Gateway details >Import Route distribution details >Add Import distributions>Priority(1)>Match Type(Attachment)>Remote Peering Attachment choose the attachment of other region which you want to connect>RPC Import distribution> Add Import distributions>Priority(1)>Match Type(Attachment)>IPsec Tunnel choose the attachment of other region which you want to connect
